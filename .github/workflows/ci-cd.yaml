name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - "feature/*"
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files-build
        uses: tj-actions/changed-files@v34.3.0
        with:
          files: |
            Dockerfile
            requirements.txt

      - name: docker setup
        if: steps.changed-files-build.outputs.any_changed == 'true'
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        if: steps.changed-files-build.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push Docker image
        if: steps.changed-files-build.outputs.any_changed == 'true'
        run: |
          docker buildx build --push \
            --tag ${{ vars.DOCKER_HUB_NAMESPACE }}/${{ vars.DOCKER_HUB_REPOSITORY }}:latest \
            --tag ${{ vars.DOCKER_HUB_NAMESPACE }}/${{ vars.DOCKER_HUB_REPOSITORY }}:${{ github.sha }} .
  unit-integration-tests:
    runs-on: ubuntu-latest
    needs: build
    env:
      DOCKER_HUB_NAMESPACE: ${{ vars.DOCKER_HUB_NAMESPACE }}
      DOCKER_HUB_REPOSITORY: ${{ vars.DOCKER_HUB_REPOSITORY }}
      DOCKER_HUB_USERNAME: ${{ vars.DOCKER_HUB_USERNAME }}
      POSTGRES_CONN_USERNAME: ${{ secrets.POSTGRES_CONN_USERNAME }}
      POSTGRES_CONN_PASSWORD: ${{ secrets.POSTGRES_CONN_PASSWORD }}
      POSTGRES_CONN_HOST: ${{ secrets.POSTGRES_CONN_HOST }}
      POSTGRES_CONN_PORT: ${{ secrets.POSTGRES_CONN_PORT }}
      METADATA_DATABASE_NAME: ${{ secrets.METADATA_DATABASE_NAME }}
      METADATA_DATABASE_USERNAME: ${{ secrets.METADATA_DATABASE_USERNAME }}
      METADATA_DATABASE_PASSWORD: ${{ secrets.METADATA_DATABASE_PASSWORD }}
      CELERY_BACKEND_NAME: ${{ secrets.CELERY_BACKEND_NAME }}
      CELERY_BACKEND_USERNAME: ${{ secrets.CELERY_BACKEND_USERNAME }}
      CELERY_BACKEND_PASSWORD: ${{ secrets.CELERY_BACKEND_PASSWORD }}
      ELT_DATABASE_NAME: ${{ secrets.ELT_DATABASE_NAME }}
      ELT_DATABASE_USERNAME: ${{ secrets.ELT_DATABASE_USERNAME }}
      ELT_DATABASE_PASSWORD: ${{ secrets.ELT_DATABASE_PASSWORD }}
      AIRFLOW_UID: ${{ vars.AIRFLOW_UID }}
      AIRFLOW_WWW_USER_USERNAME: ${{ secrets.AIRFLOW_WWW_USER_USERNAME }}
      AIRFLOW_WWW_USER_PASSWORD: ${{ secrets.AIRFLOW_WWW_USER_PASSWORD }}
      FERNET_KEY: ${{ secrets.FERNET_KEY }}
      API_KEY: ${{ secrets.API_KEY }}
      CHANNEL_HANDLE: ${{ vars.CHANNEL_HANDLE }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: changed files
        id: changed-files-tests
        uses: tj-actions/changed-files@v34.3.0
        with:
          files: |
            dags/**
            include/**
            docker-compose.yaml
      - name: setup docker compose
        if: steps.changed-files-tests.outputs.any_changed == 'true'
        run: |
          docker-compose up -d
      - name: Run unit and integration tests
        if: steps.changed-files-tests.outputs.any_changed == 'true'
        run: |
          docker-compose exec -t airflow-worker bash -c "pytest tests/ -v"
      - name: DAG tests
        if: steps.changed-files-tests.outputs.any_changed == 'true'
        run: |
          DAG_NAMES = ("produce_csv_youtube" "upload_db" "data_quality_checks")
          for DAG_NAME in $DAG_NAMES; do
           docker exec -t airflow-worker bash -c "airflow dags test $DAG_NAME"
          done
      - name: Teardown docker compose
        if: steps.changed-files-tests.outputs.any_changed == 'true'
        run: |
          docker-compose down -v
